:properties:
:id:       4799af95-ce0b-4593-a637-678105d5a2e9
:end:
#+created: 20210421182319787
#+modified: 20210601083451290
#+origin: [[<<. bibliography "Hands-On Software Architecture with Golang">>]]
#+revision: 0
#+tags: Definition
#+title: Design Patterns
#+type: text/vnd.tiddlywiki

- Definition and usage
  - Design patterns are solutions to recurring problems in software engineering. Rather thanÂ a comprehensive solution, a design pattern is a description of a problem and a template of how to solve it. This template then becomes usable in many different contexts.
- Idea:
  - study the problem and the solutions
  - goal is to identify patterns among your requirements and architecture
  - use pre-conceived solutions to the problem
  - if design is composed of well-known patterns, it's easy to:
    - share idea
- Types
  - [[id:568cccb2-1566-44ca-9c71-1346846ada86][Design Patterns/Behavioural]]
  - [[id:137a40b5-4d73-42be-9209-8acef6d3ab12][Design Patterns/Structural]]
  - [[id:c0e2d3db-ffa7-4e46-b97a-b675456cfdce][Design Patterns/Creational]]
