:properties:
:id:       f9f5fffd-d536-45c5-95ee-532d0b756766
:end:
#+title: Emacs
#+filetags: :emacs:ide:

* Installation
For Arch Linux I use following:

#+begin_src shell
./configure -C --prefix=$HOME/.local/opt/emacs-29 --with-json --with-xwidgets --with-mailutils --with-tree-sitter --with-native-compilation --with-imagemagick --with-gif --with-jpeg --with-png --with-xml2 --with-tiff --with-libsystemd --with-modules
#+end_src

And afterwards:

#+begin_src shell
make -j 4 install
#+end_src

* elfeed
- 2023-11-15 ◦ [[https://github.com/alphapapa/unpackaged.el#elfeed][Hydra filters for elfeed]]
- 2022-10-24 ◦ [[https://koustuvsinha.com/post/emacs_research_workflow/][A workflow for reading, managing and discovering ML research papers with Emacs | Koustuv Sinha]]
- 2022-10-24 ◦ [[https://yiming.dev/blog/2016/01/28/add-org-store-link-entry-for-elfeed/][Add org-store-link Entry for elfeed - Yiming Chen]]
  #+caption: https://yiming.dev/blog/2016/01/28/add-org-store-link-entry-for-elfeed/
  #+begin_src emacs-lisp
  ;; ---------------------
  ;; org capture in elfeed
  ;; ---------------------
  (defun private/org-elfeed-entry-store-link ()
    (when elfeed-show-entry
      (let* ((link (elfeed-entry-link elfeed-show-entry))
             (title (elfeed-entry-title elfeed-show-entry)))
        (org-store-link-props
         :link link
         :description title)
        )))

  (add-hook 'org-store-link-functions
            'private/org-elfeed-entry-store-link)
  #+end_src
- 2022-10-19 ◦ [[https://github.com/iocanel/emacs.d/blob/master/%2Belfeed.el][github.com/iocanel/emacs.d/+elfeed.el]]
- 2022-10-19 ◦ [[https://github.com/skeeto/.emacs.d/blob/master/etc/feed-setup.el][github.com/skeeto/.emacs.d/feed-setup.el]]
- 2022-10-19 ◦ [[https://karthinks.com/software/lazy-elfeed/][Lazy Elfeed | Karthinks]]
- 2022-10-19 ◦ [[https://emacs.stackexchange.com/questions/59786/elfeed-olivetti-modes][hooks - elfeed + olivetti modes - Emacs Stack Exchange]]
- 2022-10-19 ◦ [[https://github.com/SqrtMinusOne/dotfiles/blob/master/Emacs.org#elfeed][github.com/SqrtMinusOne/dotfiles/Emacs.org]]
** Functions
#+caption: Source: http://heikkil.github.io/blog/2015/05/09/notes-from-elfeed-entries/
#+begin_src emacs-lisp
(defun elfeed-link-title (entry)
   "Copy the entry title and URL as org link to the clipboard."
   (interactive)
   (let* ((link (elfeed-entry-link entry))
          (title (elfeed-entry-title entry))
          (titlelink (org-make-link-string link title))))
   (when titlelink
     (kill-new titlelink)
     (x-set-selection 'PRIMARY titlelink)
     (message "Yanked: %s" titlelink)))
#+end_src

#+caption: Source: https://sqrtminusone.xyz/posts/2021-09-07-emms/
#+begin_src emacs-lisp
(defun my/elfeed-search-filter-source (entry)
  "Filter elfeed search buffer by the feed under cursor."
  (interactive (list (elfeed-search-selected :ignore-region)))
  (when (elfeed-entry-p entry)
    (elfeed-search-set-filter
     (concat
      "@6-months-ago "
      "+unread "
      "="
      (replace-regexp-in-string
       (rx "?" (* not-newline) eos)
       ""
       (elfeed-feed-url (elfeed-entry-feed entry)))))))
#+end_src
* Gnus
** Articles
- 2023-11-14 ◦ [[https://randomeffect.net/post/2023/01/16/web-processing-with-gnus/][Web processing with Gnus | Random effect]]
** Resources
- 2023-11-14 ◦ [[https://www.gnu.org/software/emacs/refcards/pdf/gnus-refcard.pdf][GNUS RefCard]]
* Registers
- 2023-01-31 ◦ [[https://youtu.be/u1YoF4ycLTY][Emacs: introduction to REGISTERS - YouTube]]

** Append text to registers

When you are collecting text using append-to-register and prepend-to-register, you may want to separate individual collected pieces using a separator. In that case, configure a register-separator and store the separator text in to that register. For example, to get double newlines as text separator during the collection process, you can use the following setting.

#+begin_src emacs-lisp
(setq register-separator ?+)
(set-register register-separator "\n\n")
#+end_src

[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Registers.html][Source]]

* Resources
** Keyboard shortcuts
- 2022-09-05 ◦ [[https://github.com/VernonGrant/emacs-keyboard-shortcuts][GitHub - VernonGrant/emacs-keyboard-shortcuts: A list of Emacs keyboard shortcuts that I use on a regular basis.]]
** Bookmarks
- 2022-10-11 ◦ [[https://www.emacswiki.org/emacs/BookMarks][EmacsWiki: Book Marks]]
  #+begin_quote
  Some keys in *Bookmark List*:

  ‘a’ – show annotation for the current bookmark
  ‘A’ – show all annotations for your bookmarks
  ‘d’ – mark various entries for deletion (‘x’ – to delete them)
  ‘e’ – edit the annotation for the current bookmark
  ‘m’ – mark various entries for display and other operations, (‘v’ – to visit)
  ‘o’ – visit the current bookmark in another window, keeping the bookmark list open
  ‘C-o’ – switch to the current bookmark in another window
  ‘r’ – rename the current bookmark
  #+end_quote
** Blogs
- 2023-03-23 ◦ [[https://karthinks.com/][Karthinks]]
** Configuration
- 2024-04-18 ◦ [[https://sr.ht/~ashton314/emacs-bedrock/][emacs-bedrock: Stepping stones to a better Emacs experience]]
- 2023-06-06 ◦ [[https://whhone.com/emacs-config/][Emacs Config - Wai Hon's Blog]]
- 2023-06-06 ◦ [[https://huadeyu.tech/tools/emacs-setup-notes.html][huadeyu.tech Emacs config]]
- 2023-06-06 ◦ [[https://www.const.no/init/][const.no/init]]
- 2023-01-26 ◦ [[https://randomgeekery.org/config/emacs/nano/][My NANO-based Emacs config | Config | Random Geekery]]
- 2022-11-14 ◦ [[https://github.com/caisah/emacs.dz][GitHub - caisah/emacs.dz: Awesome emacs config files]]
- 2022-10-26 ◦ [[https://abdelhakbougouffa.pro/posts/config/][Doom Emacs Configuration]]
- 2022-10-25 ◦ [[https://huadeyu.tech/tools/emacs-setup-notes.html][极简Emacs开发环境配置]]
- 2022-10-18 ◦ [[https://alhassy.github.io/emacs.d/][A Life Configuring Emacs]]
** Evil
- 2022-09-01 ◦ [[https://github.com/edkolev/evil-goggles][GitHub - edkolev/evil-goggles: Display visual hint on evil edit operations]]
** Comparisons
- 2023-10-10 ◦ [[https://www.reddit.com/r/emacs/comments/1708b5m/is_switching_to_emacs_really_worth_it/][Reddit - Dive into anything]]
- 2023-01-16 ◦ [[https://www.reddit.com/r/emacs/comments/zwcdfh/what_does_emacs_and_elisp_has_as_an_advantage/][What does emacs and elisp has as an advantage over nvim and lua?]]
** Emojis
- 2022-10-25 ◦ [[https://ianyepan.github.io/posts/emacs-emojis/][Native Emojis in Emacs | Ian Y.E. Pan]]
** EmacsConf
- 2023-01-18 ◦ [[https://youtu.be/vEpk2ZTqJu4][EmacsConf 2022: What I'd like to see in Emacs - Richard M. Stallman]]
** Funny stuff
- 2024-01-02 ◦ [[https://www.reddit.com/r/emacs/comments/18p15jq/new_emacs_dashboard/?rdt=34310][New Emacs Dashboard]]
- 2023-06-19 ◦ [[https://www.youtube.com/watch?v=urcL86UpqZc&ab_channel=Programmersarealsohuman][Interview with an Emacs Enthusiast in 2023 [Colorized] - YouTube]]
** GTD
- 2022-12-01 ◦ [[https://members.optusnet.com.au/~charles57/GTD/gtd_workflow.html][How I use Emacs and Org-mode to implement GTD]]
** Collection of awesome packages
- 2022-09-01 ◦ [[https://github.com/emacs-tw/awesome-emacs][GitHub - emacs-tw/awesome-emacs: A community driven list of useful Emacs packages, libraries and other items.]]
- 2022-09-01 ◦ [[https://emacs.zeef.com/ehartc][Emacs by Ernst de Hart (ehartc) | ZEEF]]
- 2022-09-01 ◦ [[https://www.reddit.com/r/emacs/comments/wcupae/lets_share_your_top_3_packages_that_you_cant_live/][Lets share your top 3 packages that you cant live without. : emacs]]
- 2022-09-01 ◦ [[https://www.reddit.com/r/emacs/comments/w4gxoa/what_are_some_musthave_packages_for_emacs/][What are some must-have packages for emacs? : emacs]]
** Writing
- 2024-01-26 ◦ [[https://fedoramagazine.org/emacs-for-writers/][Emacs for Writing (Fedora Magazine)]]
- 2023-12-04 ◦ [[https://takeonrules.com/2023/12/03/emacs-turbo-charges-my-writing/][Emacs Turbo-Charges My Writing // Take on Rules]]
- 2022-11-07 ◦ [[https://blakewatson.com/journal/almost-monospaced-the-perfect-fonts-for-writing/][blakewatson.com – Almost monospaced: the perfect fonts for writing]]
- 2022-09-20 ◦ [[https://jacmoes.wordpress.com/2019/09/24/creative-writing-with-emacs/][Creative writing with Emacs – Jacmoe's Cyber Soapbox]]
** Mail
- 2024-09-09 ◦ [[https://f-santos.gitlab.io/2020-04-24-mu4e.html][Reading and sending mails from within Emacs: a tutorial for mu4e]]
** org-babel
- 2022-12-06 ◦ [[https://github.com/dfeich/org-babel-examples][github.com/dfeich/org-babel-examples]]
  - Examples using emacs org mode babel inline source code with different backend languages
** Performance
- 2024-12-18 ◦ [[https://www.reddit.com/r/emacs/comments/1gv556t/is_there_a_way_to_allow_gnu_emacs_294_to_be_more/][Is there a way to allow GNU emacs (29.4) to be more performant?]]
- 2024-01-04 ◦ [[https://discourse.doomemacs.org/t/why-is-emacs-doom-slow/83/6][Why is Emacs/Doom slow? - #6 by hlissner - Performance - Doom Emacs Discourse]]
** Reports
- 2023-01-05 ◦ [[https://www.adventuresinwhy.com/post/org-mode-timekeeping/][Timekeeping with Emacs and Org-Mode | Adventures in Why]]
** Searching
- 2023-12-19 ◦ [[http://yummymelon.com/devnull/improving-emacs-isearch-usability-with-transient.html][nfdn: Improving Emacs isearch Usability with Transient]]
*** isearch
**** Emacs Isearch Commands
From https://emacsredux.com/blog/2025/03/18/you-have-no-idea-how-powerful-isearch-is/

#+CAPTION: Isearch Commands
| Command              | Description                                                         |
|----------------------+---------------------------------------------------------------------|
| =C-s=                  | Start incremental search forward                                    |
| =C-r=                  | Start incremental search backward                                   |
| =C-s= (during search)  | Find next match forward                                             |
| =C-r= (during search)  | Find next match backward                                            |
| =DEL=                  | Cancel last input item from end of search string                    |
| =RET=                  | Exit search, leaving point at location found                        |
| =C-j= (LFD)            | Match end of line                                                   |
| =M-s M-<=              | Go to the first match                                               |
| =M-s M->=              | Go to the last match                                                |
| =C-w=                  | Yank next word or character in buffer onto the end of search string |
| =C-M-d=                | Delete character from end of search string                          |
| =C-M-y=                | Yank character from buffer onto end of search string                |
| =C-M-z=                | Yank from point until next instance of specified character          |
| =M-s C-e=              | Yank rest of line onto end of search string                         |
| =C-y=                  | Yank the last string of killed text                                 |
| =M-y=                  | Replace string just yanked with string killed before it             |
| =C-q=                  | Quote control character to search for it                            |
| =C-x 8 RET=            | Add a character to search by Unicode name (with completion)         |
| =C-g= (search fails)   | Cancel input back to what has been found successfully               |
| =C-g= (search success) | Abort and move point to starting point                              |
| =M-s c=                | Toggle search case-sensitivity                                      |
| =M-s i=                | Toggle search in invisible text                                     |
| =M-s r=                | Toggle regular-expression mode                                      |
| =M-s w=                | Toggle word mode                                                    |
| =M-s _=                | Toggle symbol mode                                                  |
| =M-s '=                | Toggle character folding                                            |
| =M-s SPC=              | Toggle whitespace matching                                          |
| =M-s e=                | Edit the search string in the minibuffer                            |
| =M-n=                  | Search for next item in the search ring                             |
| =M-p=                  | Search for previous item in the search ring                         |
| =C-M-i=                | Complete search string using the search ring                        |
| =M-s .=                | Search for the symbol at point                                      |
| =M-s M-.=              | Search for the thing (word/symbol/region) at point                  |
| =C-h b=                | Show all available keybindings during isearch                       |

**** Additional Features
- *Search Ring*: Isearch maintains a ring of the previous 16 search strings that you can cycle through.
- *Region Search*: You can mark a region and use =M-s M-.= to search for other instances of that text.
- *Isearch Customization*: Over 30 options available via =M-x customize-group isearch=.
- *Motion commands in isearch*: Enable with =(setq isearch-allow-motion t
  isearch-motion-changes-direction t)= to use navigation commands like =M-<=, =M->=, =C-v=, and
  =M-v= during search.
** Productivity
- 2023-09-06 ◦ [[https://zck.org/emacs-repeat-mode-emacs-repeat-mode][Easily repeat Emacs functions: a repeat post]]
- 2023-04-25 ◦ [[https://github.com/karthink/project-x][GitHub - karthink/project-x: Ehancements to Emacs' built in project library.]]
  - restore open files, buffers
- 2023-02-01 ◦ [[https://youtu.be/4-ubCJF9htw][Emacs micro motions and hacks - YouTube]]
** Programming
- 2023-05-30 ◦ [[https://www.masteringemacs.org/article/how-to-get-started-tree-sitter?utm_source=newsletter&utm_medium=rss][How to Get Started with Tree-Sitter - Mastering Emacs]]
** Presenting
*** revealJS
- 2024-01-10 ◦ [[https://olberger.gitlab.io/org-teaching/slides.html][How to teach using org-mode for fun and profit]]
- 2024-01-10 ◦ [[https://github.com/olberger/reveal-svg-fragment][GitHub - olberger/reveal-svg-fragment]]
  - for using SVG animations
** Tables
- 2024-01-09 ◦ [[https://emacsconf.org/2023/talks/table/][EmacsConf - 2023 - talks - Who needs Excel? Managing your students qualifications with org-table]]
** Terminal

- 2024-09-03 ◦ [[https://whhone.com/posts/emacs-in-a-termainl/][Using Emacs in a Terminal - Wai Hon's Blog]]
** Templating
- 2024-12-09 ◦ [[https://drshapeless.com/blog/posts/writing-go-templ-with-emacs.html][writing-go-templ-with-emacs]]
** UI
- 2022-12-05 ◦ [[https://codeberg.org/gopiandcode/emacs-viewer][gopiandcode/emacs-viewer: A web frontend for your Org-mode  - emacs-viewer - Codeberg.org]]
** Yaml
- 2023-01-19 ◦ [[https://github.com/zkry/yaml-pro][GitHub - zkry/yaml-pro: Edit YAML in Emacs like a pro]]
** Vanilla
Almost everything Emacs can do without any further packages
- 2024-04-18 ◦ [[https://karthinks.com/software/batteries-included-with-emacs/][Batteries included with Emacs | Karthinks]]
- 2024-04-18 ◦ [[https://karthinks.com/software/more-batteries-included-with-emacs/][More batteries included with emacs | Karthinks]] 
** Web
- 2024-12-09 ◦ [[https://www.ovistoica.com/blog/2024-7-05-modern-emacs-typescript-web-tsx-config][Modern Emacs Typescript Web (React) Config with lsp-mode, treesitter, tailwind, TSX & more - Ovi Stoica]]
