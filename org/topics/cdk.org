:PROPERTIES:
:ID:       61b1e794-8d3a-45f1-b414-612b6ad4dad4
:END:
#+title: CDK
* Tips
** Describe instances ([[https://faun.pub/create-a-bastion-with-aws-cdk-d5ebfb91aef9][source]])
  #+begin_src sh
  export BASTION_INSTANCE_ID=$(aws ec2 describe-instances \
                          --region=$AWS_REGION \
                          --filter "Name=tag:Name,Values=my-bastion" \
                          --query "Reservations[].Instances[?State.Name == 'running'].InstanceId[]" \
                          --output text)
  #+end_src
** tail-stack-events
Watch [[id:62c66ae1-ef64-4d03-8703-06f3df43dad7][AWS/CloudFormation]] events on the CLI using [[https://www.npmjs.com/package/tail-stack-events][tail-stack-events]].
#+begin_src sh
tail-stack-events -f -s <stack name>
#+end_src
* Snippets
** Load environment based configuration file
In ~app.py:~
#+begin_src python
# Load configuration file
env = app.node.try_get_context("env")
with open(f"config.{env}.yaml", "r") as cfg:
    try:
        config = yaml.safe_load(cfg)
    except yaml.YAMLError as exc:
        print(exc)

# Create stack
Stack(
    app,
    "stack-name",
    cdk.Environment(account=config["aws"]["account"], region=config["aws"]["region"]),
    config=config
)
#+end_src

Then on the CLI you can use:

#+begin_src sh
$ cdk deploy -c env=prod
#+end_src

And this will load config from ~config.prod.yaml~.

The stack itself can be defined as:

#+begin_src python
class CDKStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, env, **kwargs) -> None:
        # Save config
        self.config = kwargs.pop("config")

        super().__init__(scope, construct_id, **kwargs)

        ...
#+end_src
** Override logical IDs
- 2022-08-30 ◦ [[https://bobbyhadz.com/blog/override-logical-id-aws-cdk][How to Override Logical IDs of Resources in AWS CDK | bobbyhadz]]

#+begin_src python
cfn_assignment = sso.CfnAssignment(...)
cfn_assignment.override_logical_id(unique_id)
#+end_src
** Add conditions
In this example add [[https://docs.aws.amazon.com/cdk/api/v2/python/aws_cdk.aws_iam/PolicyStatement.html#aws_cdk.aws_iam.PolicyStatement.add_condition][conditions]] to S3 bucket policies:
#+begin_src python
listBucketPolicy = aws_iam.PolicyStatement(
    actions=[
        "s3:ListBucket",
    ],
    resources=["arn:aws:s3:::my-bucket"],
)
listBucketPolicy.add_condition("StringEquals", {"s3:prefix": ["prod"], "s3:delimiter": ["/"]})
bucket.policy.document.add_statements(listBucketPolicy)
#+end_src

Also check:
- 2022-09-06 ◦ [[https://docs.aws.amazon.com/AmazonS3/latest/userguide/amazon-s3-policy-keys.html#bucket-keys-in-amazon-s3-policies][Amazon S3 condition key examples - Amazon Simple Storage Service]]
- 2022-09-06 ◦ [[https://stackoverflow.com/questions/62880797/create-aws-user-with-s3-permissions-with-aws-cdk][aws cdk - create aws user with s3 permissions with aws cdk - Stack Overflow]]
- 2022-09-06 ◦ [[https://bobbyhadz.com/blog/aws-cli-list-all-files-in-bucket][List all Files in an S3 Bucket with AWS CLI | bobbyhadz]]
  - for using ~s3api~ and ~list-objects~
* Resources
** Articles
- 2022-09-06 ◦ [[https://dev.to/airmonitor/linux-ec2-bastion-host-with-aws-cdk-55ie][Linux EC2 Bastion Host with AWS CDK]]
  - initialize EC2 bastion hosts by specific sets of commands
  - create Route53 record for bastion host
  - pre-populate ~.ssh/authorized_keys~ with keys using ansible
  - upload ~ansible~ runbook to [[id:92c92c9a-f616-4b8f-9ca0-6979b497c4d1][AWS/S3]]
- 2022-08-22 ◦ [[https://stackoverflow.com/questions/61955381/how-to-create-elastic-ip-association-with-an-ec2-instance-using-aws-cdk][amazon web services - How to create Elastic IP association with an EC2 instance using AWS CDK?]]
- 2022-08-16 ◦ [[https://faun.pub/create-a-bastion-with-aws-cdk-d5ebfb91aef9][Create a bastion with AWS CDK]]
*** Testing
- 2022-09-06 ◦ [[https://aws.amazon.com/blogs/developer/testing-cdk-applications-in-any-language/][Testing CDK Applications in Any Language | AWS Developer Tools Blog]]
- 2022-09-06 ◦ [[https://thebenforce.com/post/cdk-integration-testing][CDK Integration Testing | Ben's Blog]]
- 2022-09-06 ◦ [[https://kreuzwerker.de/en/post/infrastructure-tests-with-cdk][Infrastructure Tests with CDK | kreuzwerker]]
  2022-09-06 ◦ [[https://lucasfsantos.com/aws-cdk-integration-tests][AWS CDK: Running Integration Tests in real AWS cloud environment using Github Actions]]
  - [[https://github.com/lucashfreitas/aws-cognito-auth][Github Repository]]
** Docs
- 2022-08-30 ◦ [[https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.NestedStack.html][class NestedStack (construct) · AWS CDK]]
  - might help us to get rid of
  #+begin_quote
  [Info at /xxx] Number of resources: xxx is approaching allowed maximum of 500
  #+end_quote
