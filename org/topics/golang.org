:PROPERTIES:
:ID:       b2831721-165d-4943-a41a-da770d96be41
:END:
#+title: Golang
#+filetags: :coding:golang:

* Articles

** Architecture
- 2023-01-19 ◦ [[https://www.reddit.com/r/golang/comments/zskzgu/go_project_written_in_clean_code_architecture/][Go project written in clean code architecture : golang]]
- 2022-10-04 ◦ [[https://threedots.tech/post/auto-generated-c4-architecture-diagrams-in-go/][Auto-generated C4 Architecture Diagrams in Go]] ([[id:ecaa327d-ead3-4e0c-80e4-af9343f68e66][PlantUML]])
- 2022-08-16 ◦ [[https://betterprogramming.pub/service-discovery-with-go-17b44011bcb2][Service Discovery with Go and mDNS]]
** AWS
- 2022-10-10 ◦ [[http://www.inanzzz.com/index.php/post/i5re/a-simple-aws-sns-example-with-golang-suing-localstack][inanzzz | A simple AWS SNS example with Golang using Localstack]]
- 2022-10-10 ◦ [[https://stackoverflow.com/questions/54204855/how-does-one-programmatically-subscribe-an-sqs-queue-to-an-sns-topic-in-go][aws sdk go - How does one programmatically subscribe an SQS queue to an SNS topic in Go? - Stack Overflow]]
- 2022-09-96 ◦ [[https://www.go-on-aws.com/][GO ON AWS]]
  - Using Golang for writing [[id:61b1e794-8d3a-45f1-b414-612b6ad4dad4][CDK]] stacks for [[id:be5bebfe-5df9-4db2-af87-7e80e11723c7][AWS]]
*** Custom resources
- 2023-01-24 ◦ [[https://cloudninja.cloud/post/building-cloudformation-custom-resources-in-go/][Cloud Ninja: Building CloudFormation Custom Resources in Go]]
- 2023-01-20 ◦ [[https://github.com/masgari/aws-custom-resources][GitHub - masgari/aws-custom-resources: A Lambda for creating custom resources in CloudFormation.]]
- 2023-01-20 ◦ [[https://github.com/lifadev/archive_aws-cloudformation-go-customres][GitHub - lifadev/archive_aws-cloudformation-go-customres: Author your AWS CloudFormation Custom Resources in Go.]]
** Fun
- 2023-05-15 ◦ [[https://go-proverbs.github.io/][Go Proverbs]]
** Botnets
- 2022-08-22 ◦ [[https://github.com/ThrillQuks/Pitraix][GitHub - ThrillQuks/Pitraix: Modern Self-Modifying Cross-Platform Peer-to-Peer Botnet over TOR]]
** Concurrency
- 2023-03-27 ◦ [[https://code-pilot.me/synchronization-patterns-in-go][CodePilot | Synchronization Patterns in Go]]
** Comparisons
- 2023-01-16 ◦ [[https://news.ycombinator.com/item?id=31976407][Ask HN: Should I learn Rust or Go? | Hacker News]] ([[id:cdf2a03e-f080-4e6f-8636-7c0f582d91fc][Rust]])
- 2023-01-16 ◦ [[https://www.reddit.com/r/golang/comments/106hi38/go_devs_that_learned_rust_what_are_your_thoughts/][Go devs that learned Rust, what are your thoughts on it?]] ([[id:cdf2a03e-f080-4e6f-8636-7c0f582d91fc][Rust]])
** Design Patterns
- 2022-09-05 ◦ [[https://dev.to/mauriciolinhares/gof-design-patterns-that-still-make-sense-in-go-27k5][GoF Design patterns that still make sense in Go]]
** Frontend
- 2023-04-11 ◦ [[https://www.reddit.com/r/golang/comments/10nw07z/best_frontend_stack_for_golang_backend/][Best front-end stack for Golang backend]]
** Error handling
- 2022-12-22 ◦ [[https://lukas.zapletalovi.com/posts/2022/wrapping-multiple-errors/][New in Go 1.20: wrapping multiple errors]]
** HTTP
- 2022-10-25 ◦ [[https://eli.thegreenplace.net/2022/go-and-proxy-servers-part-1-http-proxies/][Go and Proxy Servers: Part 1 - HTTP Proxies - Eli Bendersky's website]]
** Internals
- 2023-03-27 ◦ [[https://www.kelche.co/blog/go/golang-scheduling/][The Golang Scheduler]]
** Learning
- 2022-11-16 ◦ [[https://github.com/mauricioabreu/golings/][github.com/mauricioabreu/golings: rustlings but for golang this time]]
- 2022-08-29 ◦ [[https://appliedgo.com/blog/go-as-a-glue-language][How to use Go as a glue language]]
  #+begin_quote
  Happiness comes from within: _self-conained binaries_

  Go is _verb-oriented_. Put a pot on the stove. Boil water. Pour the water over some tea leaves. Wait. Drink. This is the way humans think. When planning a task, you think about the necessary actions before you think about the array of objects needed for executing these actions.


  Go's “*do something*” approach gets your *stuff done.*


  The =net/http= package allows building a basic *HTTP server* with a *few lines of code*.

  Go has quite a unique approach of *abstracting away data sources and sinks as uniform data streams*. An =io.Reader= stream, for example, can represent input from a file, a network connection, an in-memory buffer, or even a simple string. Unit-test your code with a byte buffer, then use it in production with real files.
  #+end_quote
- 2022-08-17 ◦ [[https://www.reddit.com/r/golang/comments/wlw5bj/preferred_resource_for_advanced_go/][Preferred resource for 'advanced' Go? : golang]]
  - Some good recommendation for advanced Go learning resources
** Plugins
- 2023-05-09 ◦ [[https://eli.thegreenplace.net/2023/rpc-based-plugins-in-go/][RPC-based plugins in Go - Eli Bendersky's website]]
  - shows how to use [[https://github.com/hashicorp/go-plugin][go-plugin]] from Hashicorp
  - talks about pros and cons between shared libraries (RPC based) and Golang's
    built-in [[https://pkg.go.dev/plugin][plugin]]
** Malware
- 2023-03-21 ◦ [[https://www.akamai.com/blog/security-research/hinatabot-uncovering-new-golang-ddos-botnet][Uncovering HinataBot: A Deep Dive into a Go-Based Threat | Akamai]]
- 2022-11-01 ◦ [[https://changelog.com/gotime/251][Hacking with Go: Part 2 with Ivan Kwiatkowski (Go Time #251)]]
- 2022-10-06 ◦ [[https://www.youtube.com/watch?v=rcsWz-gT0sI][GopherCon Europe 2021: Joakim Kennedy - The Dark Side of Go: A 2020 Go Malware Round Up]]
  #+begin_quote
  - Government based
    - APT28 - Zebrocy
    - APT29 - WellMess and WellMail
    - NOBELIUM aka UNC2452
      - SolarWinds
    - Holy Water/Storm Cloud APT
      - used Google Drive as C2
  - Criminal background
    - Loaders/Crypters
      - [[https://github.com/guitmz/ezuri][Ezuri]] ([[https://www.guitmz.com/linux-elf-runtime-crypter/][description on guitmz.com]])
    - RATs
      - /Glupteba/
    - Stealers
      - /CryptoStealer.Go/
        - steals cryptocurrency wallets and data stored in browsers
      - Clipper
        - /Clipboard Stealer/
    - Ransomware
      - /Robbin Hood/
      - /NEPHILIM Ransomware/
      - /EKANS/
    - Bots
      - Cross-Platform Mining Bots (for Linux and Windows)
        - /XMRig Miner Dropper/
      - P2P Bots
        - /FritzFrog/
        - /InterPlanetary Storm/
          - Uses IPFS
  #+end_quote
** Microservices
- 2023-04-05 ◦ [[https://www.youtube.com/watch?v=byHGNUqIONw&ab_channel=Synadia][Micro-services with auto discovery, observability and load balancing. | Rethink Connectivity Ep 9 - YouTube (using nats.io)]]
- 2022-10-04 ◦ [[https://encore.dev/docs/develop/encore-flow][Encore Docs — Encore Flow]]
  - Visualize cloud microservices architecture
- 2022-08-25 ◦ [[https://github.com/zeromicro/go-zero][go-zero]]
  - A cloud-native Go [[id:adce7f16-ab79-4935-b73e-71f3740a071f][Microservices]] framework with cli tool for productivity.
** reddit
- 2023-03-27 ◦ [[https://www.reddit.com/r/golang/comments/1221z1i/my_believe_that_golang_will_grow_in_demand_and/][My believe that Golang will grow in demand and how maybe this is ruining my pay increase]]
** Security
- 2022-10-04 ◦ [[https://dev.to/omnisyle/simple-jwt-authentication-for-golang-part-1-3kfo][Simple JWT Authentication for Golang (Part 1)]] ([[id:8b4bec8f-ec46-4edf-b236-2d295089f94d][JWT]])
** Serverless
- 2022-10-04 ◦ [[https://blog.gendocu.com/posts/grpc-on-google-cloud/][gRPC and gRPC Web on Google Cloud Run (serverless) - GenDocu Blog]]
** SSH
- 2022-11-21 ◦ [[https://eli.thegreenplace.net/2022/ssh-port-forwarding-with-go/][SSH port forwarding with Go - Eli Bendersky's website]]
** Success stories
- 2022-10-19 ◦ [[https://www.reddit.com/r/golang/comments/y6hg08/have_you_moved_from_java_to_go_or_another_popular/][Have you moved from Java to Go (or another popular language)]]
